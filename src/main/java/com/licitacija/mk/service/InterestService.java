package com.licitacija.mk.service;import com.licitacija.mk.models.Interest;import com.licitacija.mk.models.Product;import com.licitacija.mk.models.User;import com.licitacija.mk.models.exceptions.BadParametarException;import com.licitacija.mk.models.exceptions.NotFoundException;import com.licitacija.mk.repository.InterestRepository;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class InterestService {    private final InterestRepository repository;    private final UserService userService;    private final ProductService productService;    public InterestService(InterestRepository repository, UserService userService, ProductService productService) {        this.repository = repository;        this.userService = userService;        this.productService = productService;    }    public Interest findInterestById(long interestId){        return repository.findById(interestId).orElseThrow(()-> new NotFoundException("Interest with id does not exist " + interestId));    }    public List<Interest> getInterestByUser(long userId) {        User user = userService.findUserById(userId);        return repository.findAllByUser(user);    }    public List<Interest> getInterestByProduct(long productId) {        Product product = productService.findProductById(productId);        return repository.findAllByProduct(product);    }    public void createInterest(String userId, String productId) {        long user_id;        long product_id;        try {            user_id = Long.parseLong(userId);        } catch (Exception e) {            throw new BadParametarException("userId is not okay :" + userId);        }        try {            product_id = Long.parseLong(productId);        } catch (Exception e) {            throw new BadParametarException("productID is not okay :" + productId);        }        User user = userService.findUserById(user_id);        Product product = productService.findProductById(product_id);        Interest interest = new Interest();        interest.setUser(user);        interest.setProduct(product);        repository.save(interest);    }    public void deleteInterest(long interestId) {        Interest interest = this.findInterestById(interestId);        repository.delete(interest);    }}