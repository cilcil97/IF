package com.licitacija.mk.service;import com.licitacija.mk.models.Picture;import com.licitacija.mk.models.Product;import com.licitacija.mk.models.exceptions.NotFoundException;import com.licitacija.mk.repository.PictureRepository;import org.springframework.stereotype.Service;import java.util.List;import java.util.Optional;@Servicepublic class PictureService {    private final PictureRepository repository;    private final ProductService productService;    public PictureService(PictureRepository repository, ProductService productService) {        this.repository = repository;        this.productService = productService;    }    public Picture findPictureById(long id){        return repository.findById(id).orElseThrow(()->new NotFoundException("there is no picture with this id:"+id));    }    public List<Picture> findAllPicturesForProduct(long product_id){        Product product = productService.findProductById(product_id);        return repository.findAllByProduct(product);    }    // TODO PRASAJ ZA PICTURE  BYTES NA KONSULTACIE    public void addNewPicutre(byte[] pictureBytes,long product_id){        Product product = productService.findProductById(product_id);        Picture picture = new Picture(pictureBytes,product);        repository.save(picture);        //TODO CHECK PICTURE BYTES HOW TO CREATE    }    public void deletePicture(long picture_id){        Optional<Picture> picture = repository.findById(picture_id);        repository.delete(picture.get());    }    public void updatePicutre(long picture_id, byte[] pictureBytes){        Picture picture = findPictureById(picture_id);        picture.setImage(pictureBytes);        repository.save(picture);        //TODO    PICTURE BYTES HOW TO UPDATE    }}