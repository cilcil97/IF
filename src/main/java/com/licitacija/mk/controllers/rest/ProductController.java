package com.licitacija.mk.controllers.rest;import com.licitacija.mk.models.Product;import com.licitacija.mk.service.ProductService;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.web.bind.annotation.*;import javax.servlet.http.HttpServletResponse;import java.time.LocalDateTime;import java.util.List;import java.util.Map;@RestController@RequestMapping(value = "/product", produces = MediaType.APPLICATION_JSON_VALUE)@CrossOrigin("*")public class ProductController {    private final ProductService service;    public ProductController(ProductService service) {        this.service = service;    }    @GetMapping("/all")    @ResponseStatus(HttpStatus.OK)    public List<Product> findAllProducts() {        return service.findAllProducts();    }    @GetMapping("/{id}")    @ResponseStatus(HttpStatus.OK)    public Product product(@PathVariable("id") long id) {        return service.findProductById(id);    }    @GetMapping("/{cityName}")    @ResponseStatus(HttpStatus.OK)    public List<Product> findProductByCity(@PathVariable("cityName") String cityName) {        return service.findProductsByCity(cityName);    }    @GetMapping("/byUser/{userId}")    @ResponseStatus(HttpStatus.OK)    public List<Product> findProductsBy(@PathVariable("userId") long userId) {        return service.findProductsByUser(userId);    }    @DeleteMapping("/{id}")    @ResponseStatus(HttpStatus.OK)    public void deleteProduct(@PathVariable("id") long id) {        service.deleteProductById(id);    }    @PostMapping    @ResponseStatus(HttpStatus.CREATED)    public void addProduct(@RequestBody Map<String, String> payload, HttpServletResponse response) {        service.addNewProduct(payload.get("userId"),payload.get("startPrice"), payload.get("start"), payload.get("end"), payload.get("title"), payload.get("description"), payload.get("cityName"));        //TODO RETURN TO Product details    }    @PatchMapping("/{id}")    @ResponseStatus(HttpStatus.OK)    public void updateProduct(@PathVariable("id") long id, @RequestBody Map<String, String> payload) {        service.updateProduct(id, payload.get("startPrice"), payload.get("start")                , payload.get("end"), payload.get("updatedDatePublished"), payload.get("title")                , payload.get("description"), payload.get("maxPrice"), payload.get("cityName"));        //TODO RETURN TO Product details    }}