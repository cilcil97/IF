//package com.licitacija.mk.notifications;////import com.licitacija.mk.notifications.domain.Notification;//import com.licitacija.mk.notifications.service.NotificationService;//import org.springframework.http.HttpStatus;//import org.springframework.http.ResponseEntity;//import org.springframework.messaging.simp.SimpMessagingTemplate;//import org.springframework.web.bind.annotation.*;////@RestController//public class NotificationController {////    private final NotificationService notificationService;////    // The SimpMessagingTemplate is used to send Stomp over WebSocket messages.////    private final SimpMessagingTemplate messagingTemplate;////    public NotificationController(NotificationService notificationService, SimpMessagingTemplate messagingTemplate) {//        this.notificationService = notificationService;//        this.messagingTemplate = messagingTemplate;//    }//////    /**//     * GET  /notifications  -> show the notifications page.//     *///    @RequestMapping("/notifications")//    public String notifications() {//        return "notifications";//    }////    /**//     * POST  /some-action  -> do an action.//     * <p>//     * After the action is performed will be notified UserA.//     *///    @RequestMapping(value = "/some-action/{target}", method = RequestMethod.POST)//    @ResponseBody//    public ResponseEntity<?> someAction(@PathVariable String target) {////    public ResponseEntity<?> someAction(@RequestBody String target) {////        // Do an action here//        // ...////        Notification notification = new Notification("Hello, World!");//////        // Send the notification to "UserA" (by username)////        notificationService.notify(////                notification, // notification object////                target.getUsername()                    // username////        );////        messagingTemplate.convertAndSendToUser(//                target,//                "/queue/notify",//                notification//        );////        // Return an http 200 status code//        return new ResponseEntity<>(notification.getContent(), HttpStatus.OK);//    }//}